     1                                  ; from a new GOGO-no-coda (1999/09)
     2                                  ;	Copyright (C) 1999 shigeo
     3                                  ;	special thanks to Keiichi SAKAI, URURI
     4                                  ; hacked and back-ported to LAME
     5                                  ;	 by Takehiro TOMINAGA Nov 2000
     6                                  
     7                                  %include "nasm.h"
     1                              <1> 
     2                              <1> ;	Copyright (C) 1999 URURI
     3                              <1> 
     4                              <1> ;	nasm�ѥޥ���
     5                              <1> ;	1999/08/21 ���
     6                              <1> ;	1999/10/10 ���Ĥ��ɲ�
     7                              <1> ;	1999/10/27 aout�б�
     8                              <1> ;	1999/11/07 pushf, popf ��NASM�ΥХ��б�
     9                              <1> ;	1999/12/02 for BCC ( Thanks to Miquel )
    10                              <1> 
    11                              <1> ; for Windows Visual C++        -> define WIN32
    12                              <1> ;             Borland or cygwin ->        WIN32 and COFF
    13                              <1> ; for FreeBSD 2.x               ->        AOUT
    14                              <1> ; for TownsOS                   ->        __tos__
    15                              <1> ; otherwise                     ->   none
    16                              <1> 
    17                              <1> ;̾����դ���
    18                              <1> 
    19                              <1> BITS 32
    20                              <1> 
    21                              <1> section .note.GNU-stack noalloc noexec nowrite progbits
    22                              <1> 
    23                              <1> %ifdef YASM
    24                              <1> 	%define segment_code segment .text align=16 use32
    25                              <1> 	%define segment_data segment .data align=16 use32
    26                              <1> 	%define segment_bss  segment .bss align=16 use32
    27                              <1> %elifdef WIN32
    28                              <1> 	%define segment_code segment .text align=16 class=CODE use32
    29                              <1> 	%define segment_data segment .data align=16 class=DATA use32
    30                              <1> %ifdef __BORLANDC__
    31                              <1> 	%define segment_bss  segment .data align=16 class=DATA use32
    32                              <1> %else
    33                              <1> 	%define segment_bss  segment .bss align=16 class=DATA use32
    34                              <1> %endif
    35                              <1> %elifdef AOUT
    36                              <1> 	%define _NAMING
    37                              <1> 	%define segment_code segment .text
    38                              <1> 	%define segment_data segment .data
    39                              <1> 	%define segment_bss  segment .bss
    40                              <1> %else
    41                              <1> %ifidn __OUTPUT_FORMAT__,elf
    42                              <1> 	section .note.GNU-stack progbits noalloc noexec nowrite align=1
    43                              <1> %endif
    44                              <1> 	%define segment_code segment .text align=16 class=CODE use32
    45                              <1> 	%define segment_data segment .data align=16 class=DATA use32
    46                              <1> 	%define segment_bss  segment .bss align=16 class=DATA use32
    47                              <1> %endif
    48                              <1> 
    49                              <1> %ifdef WIN32
    50                              <1> 	%define _NAMING
    51                              <1> %endif
    52                              <1> 
    53                              <1> %ifdef __tos__
    54                              <1> group CGROUP text
    55                              <1> group DGROUP data
    56                              <1> %endif
    57                              <1> 
    58                              <1> ;ñ�����ư��������
    59                              <1> 
    60                              <1> %idefine float dword
    61                              <1> %idefine fsize 4
    62                              <1> %idefine fsizen(a) (fsize*(a))
    63                              <1> 
    64                              <1> ;��ɷ��
    65                              <1> 
    66                              <1> %idefine wsize 2
    67                              <1> %idefine wsizen(a) (wsize*(a))
    68                              <1> %idefine dwsize 4
    69                              <1> %idefine dwsizen(a) (dwsize*(a))
    70                              <1> 
    71                              <1> ;REG
    72                              <1> 
    73                              <1> %define r0 eax
    74                              <1> %define r1 ebx
    75                              <1> %define r2 ecx
    76                              <1> %define r3 edx
    77                              <1> %define r4 esi
    78                              <1> %define r5 edi
    79                              <1> %define r6 ebp
    80                              <1> %define r7 esp
    81                              <1> 
    82                              <1> ;MMX,3DNow!,SSE
    83                              <1> 
    84                              <1> %define pmov	movq
    85                              <1> %define pmovd	movd
    86                              <1> 
    87                              <1> %define pupldq	punpckldq
    88                              <1> %define puphdq	punpckhdq
    89                              <1> %define puplwd	punpcklwd
    90                              <1> %define puphwd	punpckhwd
    91                              <1> 
    92                              <1> %define xm0 xmm0
    93                              <1> %define xm1 xmm1
    94                              <1> %define xm2 xmm2
    95                              <1> %define xm3 xmm3
    96                              <1> %define xm4 xmm4
    97                              <1> %define xm5 xmm5
    98                              <1> %define xm6 xmm6
    99                              <1> %define xm7 xmm7
   100                              <1> 
   101                              <1> ;�����åե��Ѥ�4�ʥޥ���
   102                              <1> 
   103                              <1> %define R4(a,b,c,d) (a*64+b*16+c*4+d)
   104                              <1> 
   105                              <1> ;C�饤���ʴʰץޥ���
   106                              <1> 
   107                              <1> %imacro globaldef 1
   108                              <1> 	%ifdef _NAMING
   109                              <1> 		%define %1 _%1
   110                              <1> 	%endif
   111                              <1> 	global %1
   112                              <1> %endmacro
   113                              <1> 
   114                              <1> %imacro externdef 1
   115                              <1> 	%ifdef _NAMING
   116                              <1> 		%define %1 _%1
   117                              <1> 	%endif
   118                              <1> 	extern %1
   119                              <1> %endmacro
   120                              <1> 
   121                              <1> %imacro proc 1
   122                              <1> 	%push	proc
   123                              <1> 	%ifdef _NAMING
   124                              <1> 		global _%1
   125                              <1> 	%else
   126                              <1> 		global %1
   127                              <1> 	%endif
   128                              <1> 
   129                              <1> 	align 32
   130                              <1> %1:
   131                              <1> _%1:
   132                              <1> 
   133                              <1> 	%assign %$STACK 0
   134                              <1> 	%assign %$STACKN 0
   135                              <1> 	%assign %$ARG 4
   136                              <1> %endmacro
   137                              <1> 
   138                              <1> %imacro endproc 0
   139                              <1> 	%ifnctx proc
   140                              <1> 		%error expected 'proc' before 'endproc'.
   141                              <1> 	%else
   142                              <1> 		%if %$STACK > 0
   143                              <1> 			add esp, %$STACK
   144                              <1> 		%endif
   145                              <1> 
   146                              <1> 		%if %$STACK <> (-%$STACKN)
   147                              <1> 			%error STACKLEVEL mismatch check 'local', 'alloc', 'pushd', 'popd'
   148                              <1> 		%endif
   149                              <1> 
   150                              <1> 		ret
   151                              <1> 		%pop
   152                              <1> 	%endif
   153                              <1> %endmacro
   154                              <1> 
   155                              <1> %idefine sp(a) esp+%$STACK+a
   156                              <1> 
   157                              <1> %imacro arg 1
   158                              <1> 	%00	equ %$ARG
   159                              <1> 	%assign %$ARG %$ARG+%1
   160                              <1> %endmacro
   161                              <1> 
   162                              <1> %imacro local 1
   163                              <1> 	%assign %$STACKN %$STACKN-%1
   164                              <1> 	%00 equ %$STACKN
   165                              <1> %endmacro
   166                              <1> 
   167                              <1> %imacro alloc 0
   168                              <1> 	sub esp, (-%$STACKN)-%$STACK
   169                              <1> 	%assign %$STACK (-%$STACKN)
   170                              <1> %endmacro
   171                              <1> 
   172                              <1> %imacro pushd 1-*
   173                              <1> 	%rep %0
   174                              <1> 		push %1
   175                              <1> 		%assign %$STACK %$STACK+4
   176                              <1> 	%rotate 1
   177                              <1> 	%endrep
   178                              <1> %endmacro
   179                              <1> 
   180                              <1> %imacro popd 1-*
   181                              <1> 	%rep %0
   182                              <1> 	%rotate -1
   183                              <1> 		pop %1
   184                              <1> 		%assign %$STACK %$STACK-4
   185                              <1> 	%endrep
   186                              <1> %endmacro
   187                              <1> 
   188                              <1> ; bug of NASM-0.98
   189                              <1> %define pushf db 0x66, 0x9C
   190                              <1> %define popf  db 0x66, 0x9D
   191                              <1> 
   192                              <1> %define	ge16(n)		((((n) / 16)*0xFFFFFFFF) & 0xFFFFFFFF)
   193                              <1> %define	ge15(n)		((((n) / 15)*0xFFFFFFFF) & 0xFFFFFFFF)
   194                              <1> %define	ge14(n)		((((n) / 14)*0xFFFFFFFF) & 0xFFFFFFFF)
   195                              <1> %define	ge13(n)		((((n) / 13)*0xFFFFFFFF) & 0xFFFFFFFF)
   196                              <1> %define	ge12(n)		((((n) / 12)*0xFFFFFFFF) & 0xFFFFFFFF)
   197                              <1> %define	ge11(n)		((((n) / 11)*0xFFFFFFFF) & 0xFFFFFFFF)
   198                              <1> %define	ge10(n)		((((n) / 10)*0xFFFFFFFF) & 0xFFFFFFFF)
   199                              <1> %define	ge9(n)		((((n) /  9)*0xFFFFFFFF) & 0xFFFFFFFF)
   200                              <1> %define	ge8(n)		(ge9(n) | ((((n) /  8)*0xFFFFFFFF) & 0xFFFFFFFF))
   201                              <1> %define	ge7(n)		(ge9(n) | ((((n) /  7)*0xFFFFFFFF) & 0xFFFFFFFF))
   202                              <1> %define	ge6(n)		(ge9(n) | ((((n) /  6)*0xFFFFFFFF) & 0xFFFFFFFF))
   203                              <1> %define	ge5(n)		(ge9(n) | ((((n) /  5)*0xFFFFFFFF) & 0xFFFFFFFF))
   204                              <1> %define	ge4(n)		(ge5(n) | ((((n) /  4)*0xFFFFFFFF) & 0xFFFFFFFF))
   205                              <1> %define	ge3(n)		(ge5(n) | ((((n) /  3)*0xFFFFFFFF) & 0xFFFFFFFF))
   206                              <1> %define	ge2(n)		(ge3(n) | ((((n) /  2)*0xFFFFFFFF) & 0xFFFFFFFF))
   207                              <1> %define	ge1(n)		(ge2(n) | ((((n) /  1)*0xFFFFFFFF) & 0xFFFFFFFF))
   208                              <1> 
   209                              <1> ; macro to align for begining of loop
   210                              <1> ; %1   does not align if it LE bytes to next alignment 
   211                              <1> ;      4..16 
   212                              <1> ;      default is 12
   213                              <1> 
   214                              <1> %imacro	loopalignK6	0-1 12 
   215                              <1> %%here:
   216                              <1> 	times (($$-%%here) & 15 & ge1(($$-%%here) & 15) & ~ge4(($$-%%here) & 15)) nop
   217                              <1> 	times (1                & ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) jmp short %%skip
   218                              <1> 	times (((($$-%%here) & 15)-2) & ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   219                              <1> %%skip:
   220                              <1> %endmacro
   221                              <1> 
   222                              <1> %imacro	loopalignK7	0-1 12 
   223                              <1> %%here:
   224                              <1> 	times (1 & ge1(($$-%%here) & 15)  & ~ge2(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) nop
   225                              <1> 	times (1 & ge2(($$-%%here) & 15)  & ~ge3(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   226                              <1> 	times (1 & ge3(($$-%%here) & 15)  & ~ge4(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   227                              <1> 	times (1 & ge4(($$-%%here) & 15)  & ~ge5(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   228                              <1> 	times (1 & ge5(($$-%%here) & 15)  & ~ge6(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   229                              <1> 	times (1 & ge6(($$-%%here) & 15)  & ~ge7(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   230                              <1> 	times (1 & ge7(($$-%%here) & 15)  & ~ge8(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   231                              <1> 	times (1 & ge8(($$-%%here) & 15)  & ~ge9(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   232                              <1> 	times (1 & ge9(($$-%%here) & 15)  & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   233                              <1> 	times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   234                              <1> 	times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   235                              <1> 	times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   236                              <1> 	times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   237                              <1> 	times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   238                              <1> 	times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   239                              <1> %%skip:
   240                              <1> %endmacro
   241                              <1> 
   242                              <1> %imacro	loopalign	0-1 12 
   243                              <1> 	loopalignK7 %1
   244                              <1> %endmacro
   245                              <1> %define PACK(x,y,z,w)	(x*64+y*16+z*4+w)
   246                              <1> 
   247                              <1> %ifidn __OUTPUT_FORMAT__,elf
   248                              <1> 
   249                              <1> %idefine PIC_BASE(A) _GLOBAL_OFFSET_TABLE_ + $$ - $ wrt ..gotpc
   250                              <1> %idefine PIC_EBP_REL(A) ebp + A wrt ..gotoff
   251                              <1> %macro PIC_OFFSETTABLE 0
   252                              <1> extern  _GLOBAL_OFFSET_TABLE_
   253                              <1> get_pc.bp:
   254                              <1> 	mov ebp, [esp]
   255                              <1> 	retn
   256                              <1> %endmacro
   257                              <1> 
   258                              <1> %else
   259                              <1> 
   260                              <1> %define PIC_BASE(A) (0)
   261                              <1> %define PIC_EBP_REL(A) (A)
   262                              <1> %macro PIC_OFFSETTABLE 0
   263                              <1> get_pc.bp:
   264                              <1> 	mov ebp, [esp]
   265                              <1> 	retn
   266                              <1> %endmacro
   267                              <1> 
   268                              <1> %endif
     8                                  
     9                                  	globaldef fht_3DN
     9                              <1>  %ifdef _NAMING
     9                              <1>  %define %1 _%1
     9                              <1>  %endif
     9                              <1>  global %1
    10                                  
    11                                  	segment_data
    12                                  	align	16
    13 00000000 0000008000000000        costab	dd	0x80000000, 0
    14 00000008 F304B53FF304B53F        	dd	1.414213562,1.414213562
    15 00000010 5E836C3F5E836C3F        	dd	9.238795283293805e-01, 9.238795283293805e-01
    16 00000018 16EFC33E16EFC33E        	dd	3.826834424611044e-01, 3.826834424611044e-01
    17 00000020 6DC47E3F6DC47E3F        	dd	9.951847264044178e-01, 9.951847264044178e-01
    18 00000028 36BDC83D36BDC83D        	dd	9.801714304836734e-02, 9.801714304836734e-02
    19 00000030 43EC7F3F43EC7F3F        	dd	9.996988186794428e-01, 9.996988186794428e-01
    20 00000038 B00AC93CB00AC93C        	dd	2.454122920569705e-02, 2.454122920569705e-02
    21 00000040 C4FE7F3FC4FE7F3F        	dd	9.999811752815535e-01, 9.999811752815535e-01
    22 00000048 880FC93B880FC93B        	dd	6.135884819898878e-03, 6.135884819898878e-03
    23 00000050 000000000000803F        D_1_0_0_0	dd	0.0		, 1.0
    24                                  
    25                                  	segment_code
    26                                  
    27                                  PIC_OFFSETTABLE
    27                              <1> extern _GLOBAL_OFFSET_TABLE_
    27                              <1> get_pc.bp:
    27 00000000 8B2C24              <1>  mov ebp, [esp]
    27 00000003 C3                  <1>  retn
    28                                  
    29                                  
    30                                  ;void fht_3DN(float *fz, int nn);
    31                                  
    32                                  proc	fht_3DN
    32                              <1>  %push proc
    32                              <1>  %ifdef _NAMING
    32                              <1>  global _%1
    32                              <1>  %else
    32                              <1>  global %1
    32                              <1>  %endif
    32                              <1> 
    32 00000004 90<rept>            <1>  align 32
    32                              <1> %1:
    32                              <1> _%1:
    32                              <1> 
    32                              <1>  %assign %$STACK 0
    32                              <1>  %assign %$STACKN 0
    32                              <1>  %assign %$ARG 4
    33                                  
    34                                  	pushd	ebp, ebx, esi, edi
    34                              <1>  %rep %0
    34                              <1>  push %1
    34                              <1>  %assign %$STACK %$STACK+4
    34                              <1>  %rotate 1
    34                              <1>  %endrep
    34 00000020 55                  <2>  push %1
    34                              <2>  %assign %$STACK %$STACK+4
    34                              <2>  %rotate 1
    34 00000021 53                  <2>  push %1
    34                              <2>  %assign %$STACK %$STACK+4
    34                              <2>  %rotate 1
    34 00000022 56                  <2>  push %1
    34                              <2>  %assign %$STACK %$STACK+4
    34                              <2>  %rotate 1
    34 00000023 57                  <2>  push %1
    34                              <2>  %assign %$STACK %$STACK+4
    34                              <2>  %rotate 1
    35                                  
    36 00000024 83EC14                  	sub	esp, 20
    37                                  
    38 00000027 E8D4FFFFFF              	call	get_pc.bp
    39 0000002C 81C5[D4FFFFFF]          	add	ebp, PIC_BASE()
    40                                  
    41 00000032 8B442428                	mov	r0, [esp+40]		;fi
    42 00000036 8B5C242C                	mov	r1, [esp+44]		;r1 = nn
    43 0000003A 8D95[00000000]          	lea	r3, [PIC_EBP_REL(costab)]		;tri = costab
    44 00000040 8D34D8                  	lea	r4, [r0+r1*8]		;r4 = fn = &fz[n]
    45 00000043 89742410                	mov	[esp+16], r4
    46 00000047 BE08000000              	mov	r4, 8			;kx = k1/2
    47                                  
    48 0000004C 0F6F3A                  	pmov	mm7, [r3]
    49                                  
    50                                  	loopalign 16
    50                              <1>  loopalignK7 %1
    50                              <2> %%here:
    50 0000004F 90                  <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
    50                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
    50                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
    50                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
    50                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
    50                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
    50                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
    50                              <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
    50                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
    50                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
    50                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
    50                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
    50                              <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
    50                              <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
    50                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
    50                              <2> %%skip:
    51                                  .do1
    51          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
    52 00000050 8D5210                  	lea	r3, [r3+16]	;tri += 2;
    53 00000053 0F6FB5[08000000]        	pmov	mm6, [PIC_EBP_REL(costab+8)]
    54 0000005A 8D0C76                  	lea	r2, [r4+r4*2]		;k3*fsize/2
    55 0000005D BF04000000              	mov	r5, 4		;i = 1*fsize
    56                                  
    57                                  	loopalign 16
    57                              <1>  loopalignK7 %1
    57                              <2> %%here:
    57                              <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
    57                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
    57                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
    57                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
    57                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
    57                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
    57                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
    57                              <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
    57                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
    57                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
    57                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
    57                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
    57                              <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
    57 00000062 EB0C90909090909090- <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
    57 0000006B 9090909090          <2>
    57                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
    57                              <2> %%skip:
    58                                  .do2:
    59 00000070 8D1C30                  	lea	r1, [r0+r4]		;gi = fi + kx
    60                                  	;f
    61 00000073 0F6F00                  	pmov	mm0, [r0]	;fi0
    62 00000076 0F6F0C70                	pmov	mm1, [r0+r4*2]	;fi1
    63 0000007A 0F6F1448                	pmov	mm2, [r0+r2*2]	;fi3
    64 0000007E 0F6F1CB0                	pmov	mm3, [r0+r4*4]	;fi2
    65                                  
    66 00000082 0F62C0                  	pupldq	mm0, mm0	;fi0 | fi0
    67 00000085 0F62C9                  	pupldq	mm1, mm1	;fi1 | fi1
    68 00000088 0F62D2                  	pupldq	mm2, mm2	;fi2 | fi2
    69 0000008B 0F62DB                  	pupldq	mm3, mm3	;fi3 | fi3
    70                                  
    71 0000008E 0FEFCF                  	pxor	mm1, mm7	;fi1 | -fi1
    72 00000091 0FEFDF                  	pxor	mm3, mm7	;fi3 | -fi3
    73                                  
    74 00000094 0F0FC19A                	pfsub	mm0, mm1	;f1 | f0
    75 00000098 0F0FD39A                	pfsub	mm2, mm3	;f3 | f2
    76                                  
    77 0000009C 0F6FE0                  	pmov	mm4, mm0
    78 0000009F 0F0FC29E                	pfadd	mm0, mm2	;f1+f3|f0+f2 = fi1 | fi0
    79 000000A3 0F0FE29A                	pfsub	mm4, mm2	;f1-f3|f0-f2 = fi3 | fi2
    80                                  
    81 000000A7 0F7E00                  	pmovd	[r0], mm0	;fi[0]
    82 000000AA 0F6AC0                  	puphdq	mm0, mm0
    83 000000AD 0F7E24B0                	pmovd	[r0+r4*4], mm4	;fi[k2]
    84 000000B1 0F6AE4                  	puphdq	mm4, mm4
    85                                  
    86 000000B4 0F7E2470                	pmovd	[r0+r4*2], mm4	;fi[k1]
    87 000000B8 0F7E0448                	pmovd	[r0+r2*2], mm0	;fi[k3]
    88 000000BC 8D04F0                  	lea	r0, [r0+r4*8]
    89                                  
    90                                  	;g
    91 000000BF 0F6F03                  	pmov	mm0, [r1]	;gi0
    92 000000C2 0F6F0C73                	pmov	mm1, [r1+r4*2]	;gi1
    93 000000C6 0F6F14B3                	pmov	mm2, [r1+r4*4]	;gi2
    94 000000CA 0F6F1C4B                	pmov	mm3, [r1+r2*2]	;gi3
    95                                  
    96 000000CE 0F62C9                  	pupldq	mm1, mm1
    97 000000D1 0F62C0                  	pupldq	mm0, mm0	;gi0 | gi0
    98 000000D4 0F62D3                  	pupldq	mm2, mm3	;gi3 | gi2
    99                                  
   100 000000D7 0FEFCF                  	pxor	mm1, mm7	;gi1 | -gi1
   101                                  
   102 000000DA 0F0FC19A                	pfsub	mm0, mm1	;gi0-gi1|gi0+gi1 = g1 | g0
   103 000000DE 0F0FD6B4                	pfmul	mm2, mm6	;gi3*SQRT2|gi2*SQRT2 = g3 | g2
   104                                  
   105 000000E2 0F6FE0                  	pmov	mm4, mm0
   106 000000E5 0F0FC29E                	pfadd	mm0, mm2	;g1+g3|g0+g2 = gi1 | gi0
   107 000000E9 0F0FE29A                	pfsub	mm4, mm2	;g1-g3|g0-g2 = gi3 | gi2
   108                                  
   109 000000ED 0F7E03                  	pmovd	[r1], mm0	;gi[0]
   110 000000F0 0F6AC0                  	puphdq	mm0, mm0
   111 000000F3 0F7E24B3                	pmovd	[r1+r4*4], mm4	;gi[k2]
   112 000000F7 0F6AE4                  	puphdq	mm4, mm4
   113                                  
   114 000000FA 3B442410                	cmp	r0, [esp + 16]
   115 000000FE 0F7E0473                	pmovd	[r1+r4*2], mm0	;gi[k1]
   116 00000102 0F7E244B                	pmovd	[r1+r2*2], mm4	;gi[k3]
   117                                  
   118 00000106 0F8264FFFFFF            	jb near .do2
   119                                  
   120 0000010C 0F6F343A                	pmov	mm6, [r3+r5]	; this is not aligned address!!
   121                                  
   122                                  	loopalign 16
   122                              <1>  loopalignK7 %1
   122                              <2> %%here:
   122                              <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   122                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   122                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   122                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   122                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   122                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   122                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   122                              <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   122                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   122                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   122                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   122                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   122                              <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   122                              <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   122                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   122                              <2> %%skip:
   123                                  .for:
   124                                  ;
   125                                  ; mm6 = c1 | s1
   126                                  ; mm7 = 0x800000000 | 0
   127                                  ;
   128 00000110 0F6FCE                  	pmov	mm1, mm6
   129 00000113 8B442428                	mov	r0, [esp+40]	; fz
   130 00000117 0F6AC9                  	puphdq	mm1, mm1	; c1 | c1
   131 0000011A 8D1C70                  	lea	r1, [r0+r4*2]
   132 0000011D 0F0FC99E                	pfadd	mm1, mm1	; c1+c1 | c1+c1
   133 00000121 0F0FCEB4                	pfmul	mm1, mm6	; 2*c1*c1 | 2*c1*s1
   134 00000125 0F0F8D[50000000]9A      	pfsub	mm1, [PIC_EBP_REL(D_1_0_0_0)] ; 2*c1*c1-1.0 | 2*c1*s1 = -c2 | s2
   135                                  
   136 0000012D 0F6FC1                  	pmov	mm0, mm1
   137 00000130 0FEFFE                  	pxor	mm7, mm6	; c1 | -s1
   138                                  
   139 00000133 0F62D0                  	pupldq	mm2, mm0
   140 00000136 0F62DE                  	pupldq	mm3, mm6	; ** | c1
   141 00000139 0F6AC2                  	puphdq	mm0, mm2	; s2 | c2
   142 0000013C 0F6AF3                  	puphdq	mm6, mm3	;-s1 | c1
   143                                  
   144 0000013F 0FEF85[00000000]        	pxor	mm0, [PIC_EBP_REL(costab)]	; c2 | -s2
   145                                  
   146                                  ; mm0 =  s2| c2
   147                                  ; mm1 = -c2| s2
   148                                  ; mm6 =  c1| s1
   149                                  ; mm7 =  s1|-c1 (we use the opposite sign. from GOGO here)
   150                                  
   151 00000146 0F7F0424                	pmov	[esp], mm0
   152 0000014A 0F7F4C2408              	pmov	[esp+8], mm1
   153                                  
   154 0000014F 29FB                    	sub	r1, r5		;r1 = gi
   155 00000151 01F8                    	add	r0, r5		;r0 = fi
   156                                  
   157                                  	loopalign 16
   157                              <1>  loopalignK7 %1
   157                              <2> %%here:
   157                              <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   157                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   157                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   157                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   157                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   157                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   157                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   157                              <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   157                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   157                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   157                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   157                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   157 00000153 EB0B90909090909090- <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   157 0000015C 90909090            <2>
   157                              <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   157                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   157                              <2> %%skip:
   158                                  .do3:
   159 00000160 0F6F1470                	pmov	mm2, [r0+r4*2] ; fi[k1]
   160 00000164 0F6F2473                	pmov	mm4, [r1+r4*2] ; gi[k1]
   161 00000168 0F6F1C48                	pmov	mm3, [r0+r2*2] ; fi[k3]
   162 0000016C 0F6F2C4B                	pmov	mm5, [r1+r2*2] ; gi[k3]
   163                                  
   164 00000170 0F62D2                  	pupldq	mm2, mm2	; fi1 | fi1
   165 00000173 0F62E4                  	pupldq	mm4, mm4	; gi1 | gi1
   166 00000176 0F62DB                  	pupldq	mm3, mm3	; fi3 | fi3
   167 00000179 0F62ED                  	pupldq	mm5, mm5	; gi3 | gi3
   168                                  
   169 0000017C 0F0FD0B4                	pfmul	mm2, mm0	; s2 * fi1 | c2 * fi1
   170 00000180 0F0FE1B4                	pfmul	mm4, mm1	;-c2 * gi1 | s2 * gi1
   171 00000184 0F0FD8B4                	pfmul	mm3, mm0	; s2 * fi3 | c2 * fi3
   172 00000188 0F0FE9B4                	pfmul	mm5, mm1	;-c2 * gi3 | s2 * gi3
   173                                  
   174 0000018C 0F0FD49E                	pfadd	mm2, mm4		;b | a
   175 00000190 0F0FDD9E                	pfadd	mm3, mm5		;d | c
   176                                  
   177 00000194 0F6F00                  	pmov	mm0, [r0]
   178 00000197 0F6F23                  	pmov	mm4, [r1]
   179 0000019A 0F6F0CB0                	pmov	mm1, [r0+r4*4]
   180 0000019E 0F6F2CB3                	pmov	mm5, [r1+r4*4]
   181                                  
   182 000001A2 0F62C4                  	pupldq	mm0, mm4		;gi0 | fi0
   183 000001A5 0F62CD                  	pupldq	mm1, mm5		;gi2 | fi2
   184                                  
   185 000001A8 0F6FE2                  	pmov	mm4, mm2
   186 000001AB 0F6FEB                  	pmov	mm5, mm3
   187                                  
   188 000001AE 0F0FD09E                	pfadd	mm2, mm0		;g0 | f0
   189 000001B2 0F0FD99E                	pfadd	mm3, mm1		;g2 | f2
   190                                  
   191 000001B6 0F0FC49A                	pfsub	mm0, mm4		;g1 | f1
   192 000001BA 0F0FCD9A                	pfsub	mm1, mm5		;g3 | f3
   193                                  
   194 000001BE 0F6FE3                  	pmov	mm4, mm3
   195 000001C1 0F6FE9                  	pmov	mm5, mm1
   196                                  
   197 000001C4 0F62E4                  	pupldq	mm4, mm4		;f2 | f2
   198 000001C7 0F6AED                  	puphdq	mm5, mm5		;g3 | g3
   199 000001CA 0F6ADB                  	puphdq	mm3, mm3		;g2 | g2
   200 000001CD 0F62C9                  	pupldq	mm1, mm1		;f3 | f3
   201                                  
   202 000001D0 0F0FE6B4                	pfmul	mm4, mm6		;f2 * c1 | f2 * s1
   203 000001D4 0F0FEFB4                	pfmul	mm5, mm7		;g3 * s1 | g3 *-c1
   204 000001D8 0F0FDEB4                	pfmul	mm3, mm6		;g2 * c1 | g2 * s1
   205 000001DC 0F0FCFB4                	pfmul	mm1, mm7		;f3 * s1 | f3 *-c1
   206                                  
   207 000001E0 0F0FE59E                	pfadd	mm4, mm5		;a | b
   208 000001E4 0F0FD99A                	pfsub	mm3, mm1		;d | c
   209                                  
   210 000001E8 0F6FEA                  	pmov	mm5, mm2
   211 000001EB 0F6FC8                  	pmov	mm1, mm0
   212                                  
   213 000001EE 0F62D2                  	pupldq	mm2, mm2		;f0 | f0
   214 000001F1 0F62C0                  	pupldq	mm0, mm0		;f1 | f1
   215                                  
   216 000001F4 0F6ACA                  	puphdq	mm1, mm2		;f0 | g1
   217 000001F7 0F6AE8                  	puphdq	mm5, mm0		;f1 | g0
   218                                  
   219 000001FA 0F6FD4                  	pmov	mm2, mm4
   220 000001FD 0F6FC3                  	pmov	mm0, mm3
   221                                  
   222 00000200 0F0FE19E                	pfadd	mm4, mm1		;fi0 | gi1
   223 00000204 0F0FDD9E                	pfadd	mm3, mm5		;fi1 | gi0
   224 00000208 0F0FCA9A                	pfsub	mm1, mm2		;fi2 | gi3
   225 0000020C 0F0FE89A                	pfsub	mm5, mm0		;fi3 | gi2
   226                                  
   227 00000210 0F7E2473                	pmovd	[r1+r4*2], mm4	;gi[k1]
   228 00000214 0F6AE4                  	puphdq	mm4, mm4
   229 00000217 0F7E1B                  	pmovd	[r1], mm3		;gi[0]
   230 0000021A 0F6ADB                  	puphdq	mm3, mm3
   231 0000021D 0F7E0C4B                	pmovd	[r1+r2*2], mm1	;gi[k3]
   232 00000221 0F6AC9                  	puphdq	mm1, mm1
   233 00000224 0F7E2CB3                	pmovd	[r1+r4*4], mm5	;gi[k2]
   234 00000228 0F6AED                  	puphdq	mm5, mm5
   235                                  
   236 0000022B 0F7E20                  	pmovd	[r0], mm4	;fi[0]
   237 0000022E 0F7E1C70                	pmovd	[r0+r4*2], mm3	;fi[k1]
   238 00000232 0F7E0CB0                	pmovd	[r0+r4*4], mm1	;fi[k2]
   239 00000236 0F7E2C48                	pmovd	[r0+r2*2], mm5	;fi[k3]
   240                                  
   241 0000023A 8D04F0                  	lea	r0, [r0+r4*8]
   242 0000023D 8D1CF3                  	lea	r1, [r1+r4*8]
   243 00000240 3B442410                	cmp	r0, [esp + 16]
   244 00000244 0F6F0424                	pmov	mm0, [esp]
   245 00000248 0F6F4C2408              	pmov	mm1, [esp+8]
   246                                  
   247 0000024D 0F820DFFFFFF            	jb near	.do3
   248                                  
   249 00000253 83C704                  	add	r5, 4
   250                                  ; mm6 =  c1| s1
   251                                  ; mm7 =  s1|-c1 (we use the opposite sign. from GOGO here)
   252 00000256 0F0F32B4                	pfmul	mm6, [r3]	; c1*a | s1*a
   253 0000025A 0F0F7A08B4              	pfmul	mm7, [r3+8]	; s1*b |-c1*b
   254 0000025F 39F7                    	cmp	r5, r4
   255                                  
   256 00000261 0F0FF79A                	pfsub	mm6, mm7	; c1*a-s1*b | s1*a+c1*b
   257 00000265 0F62FE                  	pupldq	mm7,mm6
   258 00000268 0F6AF7                  	puphdq	mm6,mm7
   259 0000026B 0F6FBD[00000000]        	pmov	mm7, [PIC_EBP_REL(costab)]
   260 00000272 0F8298FEFFFF            	jb near	.for
   261                                  
   262 00000278 8B442428                	mov	r0, [esp+40]	;fi
   263 0000027C 3B74242C                	cmp	r4, [esp+40+4]
   264 00000280 8D34B500000000          	lea	r4, [r4*4]	;kx *= 4
   265                                  
   266 00000287 0F82C3FDFFFF            	jb near	.do1
   267                                  .exitttt
   267          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
   268 0000028D 0F0E                    	femms
   269 0000028F 83C414                  	add	esp,20
   270                                  	popd	ebp, ebx, esi, edi
   270                              <1>  %rep %0
   270                              <1>  %rotate -1
   270                              <1>  pop %1
   270                              <1>  %assign %$STACK %$STACK-4
   270                              <1>  %endrep
   270                              <2>  %rotate -1
   270 00000292 5F                  <2>  pop %1
   270                              <2>  %assign %$STACK %$STACK-4
   270                              <2>  %rotate -1
   270 00000293 5E                  <2>  pop %1
   270                              <2>  %assign %$STACK %$STACK-4
   270                              <2>  %rotate -1
   270 00000294 5B                  <2>  pop %1
   270                              <2>  %assign %$STACK %$STACK-4
   270                              <2>  %rotate -1
   270 00000295 5D                  <2>  pop %1
   270                              <2>  %assign %$STACK %$STACK-4
   271                                  endproc
   271                              <1>  %ifnctx proc
   271                              <1>  %error expected 'proc' before 'endproc'.
   271                              <1>  %else
   271                              <1>  %if %$STACK > 0
   271                              <1>  add esp, %$STACK
   271                              <1>  %endif
   271                              <1> 
   271                              <1>  %if %$STACK <> (-%$STACKN)
   271                              <1>  %error STACKLEVEL mismatch check 'local', 'alloc', 'pushd', 'popd'
   271                              <1>  %endif
   271                              <1> 
   271 00000296 C3                  <1>  ret
   271                              <1>  %pop
   271                              <1>  %endif
   272                                  
   273                                  
   274                                  ;void fht_E3DN(float *fz, int nn);
   275                                  
   276                                  proc	fht_E3DN
   276                              <1>  %push proc
   276                              <1>  %ifdef _NAMING
   276                              <1>  global _%1
   276                              <1>  %else
   276                              <1>  global %1
   276                              <1>  %endif
   276                              <1> 
   276 00000297 90<rept>            <1>  align 32
   276                              <1> %1:
   276                              <1> _%1:
   276                              <1> 
   276                              <1>  %assign %$STACK 0
   276                              <1>  %assign %$STACKN 0
   276                              <1>  %assign %$ARG 4
   277                                  
   278                                  	pushd	ebp, ebx, esi, edi
   278                              <1>  %rep %0
   278                              <1>  push %1
   278                              <1>  %assign %$STACK %$STACK+4
   278                              <1>  %rotate 1
   278                              <1>  %endrep
   278 000002A0 55                  <2>  push %1
   278                              <2>  %assign %$STACK %$STACK+4
   278                              <2>  %rotate 1
   278 000002A1 53                  <2>  push %1
   278                              <2>  %assign %$STACK %$STACK+4
   278                              <2>  %rotate 1
   278 000002A2 56                  <2>  push %1
   278                              <2>  %assign %$STACK %$STACK+4
   278                              <2>  %rotate 1
   278 000002A3 57                  <2>  push %1
   278                              <2>  %assign %$STACK %$STACK+4
   278                              <2>  %rotate 1
   279                                  
   280 000002A4 83EC14                  	sub	esp, 20
   281                                  
   282 000002A7 E854FDFFFF              	call	get_pc.bp
   283 000002AC 81C5[54FDFFFF]          	add	ebp, PIC_BASE()
   284                                  
   285 000002B2 8B442428                	mov	r0, [esp+40]		;fi
   286 000002B6 8B5C242C                	mov	r1, [esp+44]		;r1 = nn
   287 000002BA 8D95[00000000]          	lea	r3, [PIC_EBP_REL(costab)]		;tri = costab
   288 000002C0 8D34D8                  	lea	r4, [r0+r1*8]		;r4 = fn = &fz[n]
   289 000002C3 89742410                	mov	[esp+16], r4
   290 000002C7 BE08000000              	mov	r4, 8			;kx = k1/2
   291                                  
   292 000002CC 0F6F3A                  	pmov	mm7, [r3]
   293                                  
   294                                  	loopalign 16
   294                              <1>  loopalignK7 %1
   294                              <2> %%here:
   294 000002CF 90                  <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   294                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   294                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   294                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   294                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   294                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   294                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   294                              <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   294                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   294                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   294                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   294                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   294                              <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   294                              <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   294                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   294                              <2> %%skip:
   295                                  .do1
   295          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
   296 000002D0 8D5210                  	lea	r3, [r3+16]	;tri += 2;
   297 000002D3 0F6FB5[08000000]        	pmov	mm6, [PIC_EBP_REL(costab+8)]
   298 000002DA 8D0C76                  	lea	r2, [r4+r4*2]		;k3*fsize/2
   299 000002DD BF04000000              	mov	r5, 4		;i = 1*fsize
   300                                  
   301                                  	loopalign 16
   301                              <1>  loopalignK7 %1
   301                              <2> %%here:
   301                              <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   301                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   301                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   301                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   301                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   301                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   301                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   301                              <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   301                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   301                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   301                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   301                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   301                              <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   301 000002E2 EB0C90909090909090- <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   301 000002EB 9090909090          <2>
   301                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   301                              <2> %%skip:
   302                                  .do2:
   303 000002F0 8D1C30                  	lea	r1, [r0+r4]		;gi = fi + kx
   304                                  ;f
   305 000002F3 0F6F00                  	pmov	mm0, [r0]	; X  | fi0
   306 000002F6 0F6F0CB0                	pmov	mm1, [r0+r4*4]	; X  | fi2
   307 000002FA 0F620470                	pupldq	mm0, [r0+r4*2]	;fi1 | fi0
   308 000002FE 0F620C48                	pupldq	mm1, [r0+r2*2]	;fi3 | fi2
   309 00000302 0F0FC08E                	pfpnacc	mm0, mm0	;fi0+fi1 | fi0-fi1 = f0|f1
   310 00000306 0F0FC98E                	pfpnacc	mm1, mm1	;fi2+fi3 | fi2-fi3 = f2|f3
   311                                  
   312 0000030A 0F6FD0                  	pmov	mm2, mm0
   313 0000030D 0F0FC19E                	pfadd	mm0, mm1	;f0+f2|f1+f3 = fi0 | fi1
   314 00000311 0F0FD19A                	pfsub	mm2, mm1	;f0-f2|f1-f3 = fi2 | fi3
   315                                  
   316 00000315 0F7E0470                	pmovd	[r0+r4*2], mm0	;fi[k1]
   317 00000319 0F7E1448                	pmovd	[r0+r2*2], mm2	;fi[k3]
   318                                  
   319 0000031D 0F6AC0                  	puphdq	mm0, mm0
   320 00000320 0F6AD2                  	puphdq	mm2, mm2
   321 00000323 0F7E00                  	pmovd	[r0], mm0	;fi[0]
   322 00000326 0F7E14B0                	pmovd	[r0+r4*4], mm2	;fi[k2]
   323                                  
   324 0000032A 8D04F0                  	lea	r0, [r0+r4*8]
   325                                  ;g
   326 0000032D 0F6F1B                  	pmov	mm3, [r1]	;    gi0
   327 00000330 0F6F244B                	pmov	mm4, [r1+r2*2]	;    gi3
   328 00000334 0F621C73                	pupldq	mm3, [r1+r4*2]	;gi1|gi0
   329 00000338 0F6224B3                	pupldq	mm4, [r1+r4*4]	;gi2|gi3
   330                                  
   331 0000033C 0F0FDB8E                	pfpnacc	mm3, mm3	;gi0+gi1  |gi0-gi1   = f0|f1
   332 00000340 0F0FE6B4                	pfmul	mm4, mm6	;gi2*SQRT2|gi3*SQRT2 = f2|f3
   333                                  
   334 00000344 0F6FEB                  	pmov	mm5, mm3
   335 00000347 0F0FDC9E                	pfadd	mm3, mm4	;f0+f2|f1+f3
   336 0000034B 0F0FEC9A                	pfsub	mm5, mm4	;f0-f2|f1-f3
   337                                  
   338 0000034F 3B442410                	cmp	r0, [esp + 16]
   339 00000353 0F7E1C73                	pmovd	[r1+r4*2], mm3	;gi[k1]
   340 00000357 0F7E2C4B                	pmovd	[r1+r2*2], mm5	;gi[k3]
   341 0000035B 0F6ADB                  	puphdq	mm3, mm3
   342 0000035E 0F6AED                  	puphdq	mm5, mm5
   343 00000361 0F7E1B                  	pmovd	[r1], mm3	;gi[0]
   344 00000364 0F7E2CB3                	pmovd	[r1+r4*4], mm5	;gi[k2]
   345                                  
   346 00000368 0F8282FFFFFF            	jb near .do2
   347                                  
   348 0000036E 0F6F343A                	pmov	mm6, [r3+r5]	; this is not aligned address!!
   349                                  
   350                                  	loopalign 16
   350                              <1>  loopalignK7 %1
   350                              <2> %%here:
   350                              <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   350                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   350                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   350                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   350                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   350                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   350                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   350                              <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   350                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   350                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   350                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   350                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   350                              <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   350 00000372 EB0C90909090909090- <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   350 0000037B 9090909090          <2>
   350                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   350                              <2> %%skip:
   351                                  .for:
   352                                  ;
   353                                  ; mm6 = c1 | s1
   354                                  ; mm7 = 0x800000000 | 0
   355                                  ;
   356 00000380 0F6FEE                  	pmov	mm5, mm6
   357 00000383 8B442428                	mov	r0, [esp+40]	; fz
   358 00000387 0F6AED                  	puphdq	mm5, mm5	; c1 | c1
   359 0000038A 8D1C70                  	lea	r1, [r0+r4*2]
   360 0000038D 0F0FED9E                	pfadd	mm5, mm5	; c1+c1 | c1+c1
   361 00000391 0F0FEEB4                	pfmul	mm5, mm6	; 2*c1*c1 | 2*c1*s1
   362 00000395 0F0FAD[50000000]9A      	pfsub	mm5, [PIC_EBP_REL(D_1_0_0_0)] ; 2*c1*c1-1.0 | 2*c1*s1 = -c2 | s2
   363                                  
   364 0000039D 0F0FE5BB                	pswapd	mm4, mm5	; s2 |-c2
   365 000003A1 0FEFE7                  	pxor	mm4, mm7	; s2 | c2
   366 000003A4 0FEFFE                  	pxor	mm7, mm6	; c1 |-s1
   367 000003A7 0F0FF6BB                	pswapd	mm6, mm6	; s1 | c1
   368                                  
   369                                  ; mm4 =  s2| c2
   370                                  ; mm5 = -c2| s2
   371                                  ; mm6 =  c1| s1
   372                                  ; mm7 =  s1|-c1 (we use the opposite sign. from GOGO here)
   373                                  
   374 000003AB 0F7F2424                	pmov	[esp], mm4
   375 000003AF 0F7F6C2408              	pmov	[esp+8], mm5
   376                                  
   377 000003B4 29FB                    	sub	r1, r5		;r1 = gi
   378 000003B6 01F8                    	add	r0, r5		;r0 = fi
   379                                  
   380                                  	loopalign 16
   380                              <1>  loopalignK7 %1
   380                              <2> %%here:
   380                              <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   380                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   380                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   380                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   380                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   380                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   380                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   380 000003B8 8D04050000000090    <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   380                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   380                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   380                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   380                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   380                              <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   380                              <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   380                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   380                              <2> %%skip:
   381                                  .do3:
   382 000003C0 0F6F0448                	pmov	mm0, [r0+r2*2] ; fi[k1]
   383 000003C4 0F6F144B                	pmov	mm2, [r1+r2*2] ; gi[k1]
   384 000003C8 0F6F0C70                	pmov	mm1, [r0+r4*2] ; fi[k3]
   385 000003CC 0F6F1C73                	pmov	mm3, [r1+r4*2] ; gi[k3]
   386                                  
   387 000003D0 0F62C0                  	pupldq	mm0, mm0
   388 000003D3 0F62D2                  	pupldq	mm2, mm2
   389 000003D6 0F62C9                  	pupldq	mm1, mm1
   390 000003D9 0F62DB                  	pupldq	mm3, mm3
   391                                  
   392 000003DC 0F0FC4B4                	pfmul	mm0, mm4
   393 000003E0 0F0FD5B4                	pfmul	mm2, mm5
   394 000003E4 0F0FCCB4                	pfmul	mm1, mm4
   395 000003E8 0F0FDDB4                	pfmul	mm3, mm5
   396                                  
   397 000003EC 0F0FC29E                	pfadd	mm0, mm2		;d | c
   398 000003F0 0F0FCB9E                	pfadd	mm1, mm3		;b | a
   399                                  
   400 000003F4 0F6F14B0                	pmov	mm2, [r0+r4*4]		;fi2
   401 000003F8 0F621CB3                	pupldq	mm3, [r1+r4*4]		;gi2 | -
   402 000003FC 0F6F20                  	pmov	mm4, [r0]		;fi0
   403 000003FF 0F622B                  	pupldq	mm5, [r1]		;gi0 | -
   404                                  
   405 00000402 0F62D0                  	pupldq	mm2, mm0		;c | fi2
   406 00000405 0F6AD8                  	puphdq	mm3, mm0		;d | gi2
   407 00000408 0F62E1                  	pupldq	mm4, mm1		;a | fi0
   408 0000040B 0F6AE9                  	puphdq	mm5, mm1		;b | gi0
   409                                  
   410 0000040E 0F0FD28E                	pfpnacc	mm2, mm2		;f2 | f3
   411 00000412 0F0FDB8E                	pfpnacc	mm3, mm3		;g2 | g3
   412 00000416 0F0FE48E                	pfpnacc	mm4, mm4		;f0 | f1
   413 0000041A 0F0FED8E                	pfpnacc	mm5, mm5		;g0 | g1
   414                                  
   415 0000041E 0F6FC2                  	pmov	mm0, mm2
   416 00000421 0F6FCB                  	pmov	mm1, mm3
   417 00000424 0F62D2                  	pupldq	mm2, mm2		;f3 | f3
   418 00000427 0F62DB                  	pupldq	mm3, mm3		;g3 | g3
   419 0000042A 0F6AC0                  	puphdq	mm0, mm0		;f2 | f2
   420 0000042D 0F6AC9                  	puphdq	mm1, mm1		;g2 | g2
   421                                  
   422 00000430 0F0FE4BB                	pswapd	mm4, mm4		;f1 | f0
   423 00000434 0F0FEDBB                	pswapd	mm5, mm5		;g1 | g0
   424                                  
   425 00000438 0F0FC7B4                	pfmul	mm0, mm7		;f2 * s1 | f2 *-c1
   426 0000043C 0F0FDEB4                	pfmul	mm3, mm6		;g3 * c1 | g3 * s1
   427 00000440 0F0FCEB4                	pfmul	mm1, mm6		;g2 * c1 | g2 * s1
   428 00000444 0F0FD7B4                	pfmul	mm2, mm7		;f3 * s1 | f3 *-c1
   429                                  
   430 00000448 0F0FC39A                	pfsub	mm0, mm3		; b |-a
   431 0000044C 0F0FCA9A                	pfsub	mm1, mm2		; d | c
   432                                  
   433 00000450 0F6FD5                  	pmov	mm2, mm5
   434 00000453 0F6FDC                  	pmov	mm3, mm4
   435 00000456 0F62E0                  	pupldq	mm4, mm0		;-a | f0
   436 00000459 0F62E9                  	pupldq	mm5, mm1		; c | g0
   437 0000045C 0F6AD0                  	puphdq	mm2, mm0		; b | g1
   438 0000045F 0F6AD9                  	puphdq	mm3, mm1		; d | f1
   439                                  
   440 00000462 0F0FE48E                	pfpnacc	mm4, mm4		;fi2 | fi0
   441 00000466 0F0FED8E                	pfpnacc	mm5, mm5		;gi0 | gi2
   442 0000046A 0F0FD28E                	pfpnacc	mm2, mm2		;gi1 | gi3
   443 0000046E 0F0FDB8E                	pfpnacc	mm3, mm3		;fi1 | fi3
   444                                  
   445 00000472 0F7E20                  	pmovd	[r0], mm4		;fi[0]
   446 00000475 0F7E2CB3                	pmovd	[r1+r4*4], mm5		;gi[k2]
   447 00000479 0F7E144B                	pmovd	[r1+r2*2], mm2		;gi[k3]
   448 0000047D 0F7E1C48                	pmovd	[r0+r2*2], mm3		;fi[k3]
   449                                  
   450 00000481 0F6AE4                  	puphdq	mm4, mm4
   451 00000484 0F6AED                  	puphdq	mm5, mm5
   452 00000487 0F6AD2                  	puphdq	mm2, mm2
   453 0000048A 0F6ADB                  	puphdq	mm3, mm3
   454 0000048D 0F7E24B0                	pmovd	[r0+r4*4], mm4		;fi[k2]
   455 00000491 0F7E2B                  	pmovd	[r1], mm5		;gi[0]
   456 00000494 0F7E1473                	pmovd	[r1+r4*2], mm2		;gi[k1]
   457 00000498 0F7E1C70                	pmovd	[r0+r4*2], mm3		;fi[k1]
   458                                  
   459 0000049C 8D04F0                  	lea	r0, [r0+r4*8]
   460 0000049F 8D1CF3                  	lea	r1, [r1+r4*8]
   461 000004A2 3B442410                	cmp	r0, [esp + 16]
   462 000004A6 0F6F2424                	pmov	mm4, [esp]
   463 000004AA 0F6F6C2408              	pmov	mm5, [esp+8]
   464                                  
   465 000004AF 0F820BFFFFFF            	jb near	.do3
   466                                  
   467 000004B5 83C704                  	add	r5, 4
   468                                  ; mm6 =  c1| s1
   469                                  ; mm7 =  s1|-c1 (we use the opposite sign. from GOGO here)
   470 000004B8 0F0F32B4                	pfmul	mm6, [r3]	; c1*a | s1*a
   471 000004BC 0F0F7A08B4              	pfmul	mm7, [r3+8]	; s1*b |-c1*b
   472 000004C1 39F7                    	cmp	r5, r4
   473                                  
   474 000004C3 0F0FF79A                	pfsub	mm6, mm7	; c1*a-s1*b | s1*a+c1*b
   475 000004C7 0F0FF6BB                	pswapd	mm6, mm6 ; ???	; s1*a+c1*b | c1*a-s1*b
   476 000004CB 0F6FBD[00000000]        	pmov	mm7, [PIC_EBP_REL(costab)]
   477 000004D2 0F82A8FEFFFF            	jb near	.for
   478                                  
   479 000004D8 8B442428                	mov	r0, [esp+40]	;fi
   480 000004DC 3B74242C                	cmp	r4, [esp+40+4]
   481 000004E0 8D34B500000000          	lea	r4, [r4*4]	;kx *= 4
   482                                  
   483 000004E7 0F82E3FDFFFF            	jb near	.do1
   484                                  .exitttt
   484          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
   485 000004ED 0F0E                    	femms
   486 000004EF 83C414                  	add	esp,20
   487                                  	popd	ebp, ebx, esi, edi
   487                              <1>  %rep %0
   487                              <1>  %rotate -1
   487                              <1>  pop %1
   487                              <1>  %assign %$STACK %$STACK-4
   487                              <1>  %endrep
   487                              <2>  %rotate -1
   487 000004F2 5F                  <2>  pop %1
   487                              <2>  %assign %$STACK %$STACK-4
   487                              <2>  %rotate -1
   487 000004F3 5E                  <2>  pop %1
   487                              <2>  %assign %$STACK %$STACK-4
   487                              <2>  %rotate -1
   487 000004F4 5B                  <2>  pop %1
   487                              <2>  %assign %$STACK %$STACK-4
   487                              <2>  %rotate -1
   487 000004F5 5D                  <2>  pop %1
   487                              <2>  %assign %$STACK %$STACK-4
   488                                  endproc
   488                              <1>  %ifnctx proc
   488                              <1>  %error expected 'proc' before 'endproc'.
   488                              <1>  %else
   488                              <1>  %if %$STACK > 0
   488                              <1>  add esp, %$STACK
   488                              <1>  %endif
   488                              <1> 
   488                              <1>  %if %$STACK <> (-%$STACKN)
   488                              <1>  %error STACKLEVEL mismatch check 'local', 'alloc', 'pushd', 'popd'
   488                              <1>  %endif
   488                              <1> 
   488 000004F6 C3                  <1>  ret
   488                              <1>  %pop
   488                              <1>  %endif
